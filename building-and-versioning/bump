#!/usr/bin/env sh

##
# Automatically bump the major|minor|patch version using git tags.
# Usage (defaults to patch):
#   bump [major|minor|patch]

# get latest semver tag: v{MAJOR}.{MINOR}.{PATCH}
previous_tag=$(git tag -l v*.*.* | sort -V -r | head -n 1)

# if there are no previous tags, assume v0.0.0
if [[ ! "$previous_tag" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  previous_tag="v0.0.0"
fi

# strip out the 'v'
previous_version=$(echo "$previous_tag" | sed 's/v//')

# extract major, minor, and patch
major=$(echo "$previous_version" | awk -F '.' '{print $1}')
minor=$(echo "$previous_version" | awk -F '.' '{print $2}')
patch=$(echo "$previous_version" | awk -F '.' '{print $3}')

echo "Previous version: ${major}.${minor}.${patch}"

case "$1" in
  major)
    echo "Bumping major version"
    major=$(( $major + 1 ))
    minor=0
    patch=0
    ;;
  minor)
    echo "Bumping minor version"
    minor=$(( $minor + 1 ))
    patch=0
    ;;
  patch|*)
    echo "Bumping patch version"
    patch=$(( $patch + 1 ))
    ;;
esac

echo "New semantic version is: ${major}.${minor}.${patch}"

new_tag="v${major}.${minor}.${patch}"
git tag -a "$new_tag" -m "$new_tag"

echo "WARNING: Remember to 'git push --tags' to share this with your team!"

echo "Latest tags:"
git tag -l | sort -V -r | head -n 5
